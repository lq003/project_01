//全局配置
    git config --global user.name "lq"
    git config --global user.email "774213094@qq.com"

//查询全局配置
    1.全局配置文件
    C:/Users/用户名文件夹/.gitconfig

    2.检查全局配置
    # 查看所有的全局配置项
    git config --list --global

    # 查询指定的全局配置项
    git config user.name
    git config user.email

//获取帮助信息
    git help config
    git help -h

//检查文件状态
    #详细列表
    git status 
    #精简状态
    git status -s

注释:标准的工作流程 工作区→暂存区→Git仓库
//文件操作
    #暂存文件
    git add 文件名.后缀
    #暂存所有文件
    git add .

    #取消暂存的文件
    git reset HEAD 文件名.后缀
    #撤销所有暂存文件
    git reset HEAD .
    
    #提交更新，-m选项后面是用来对提交的内容做进一步的描述
    git commit -m "描述信息"

    #撤销文件修改，还原成Git仓库中所保存的版本
    git checkout -- 文件名.后缀

    #跳过暂存区，直接提交Git仓库，工作区→Git仓库
    git commit -a -m "描述信息"

    #移除文件
        1)从Git仓库和工作区中同时移除文件
        git rm -f 文件名.后缀
        2)只从Git仓库中移除文件
        git rm --cached 文件名.后缀

    #忽略文件
    创建.gitignore配置文件，列出需要忽略的文件

    #查看提交历史
        1）查看所有提交历史，最近提交排在最上面
        git log
        2)只展示最新的几条提交历史 
        git log -2
        3)在一行上展示最近几条条提交历史的信息
        git log -3 --pretty=oneline
        4)自定义输出格式
        %h 提交的简写哈希值 %an 作者 %ar作者修订日期，按多久以前的方式显示 %s提交说明
        git log -3 --pretty=format:"%h |%an |%ar |%s"

    #回退到指定版本
    //第一步:在一行上展示所有的提交历史
    git log --pretty=oneline

    //第二步:根据提交ID还原到指定版本
    git reset --hard 版本id

    //第三步:在旧版本中查看所有版本历史
    git reflog --pretty=oneline

    //第四步:根据提交ID还原到最新版本
    git reset --hard 版本id


//Git上传到Github
生成SSH key
ssh-keygen -t rsa -b 4096 -C "774213094@qq.com"
连续敲三次回车，文件生成C:\Users\用户文件夹\.ssh目录生成id_rsa和id_rsa.pub


//分支
#查看分支列表
git branch

#创建新的分支
git branch 新建分支名称

#切换分支
git checkout 分支名称

#快速创建和切换分支
git checkout -b 分支名称

#合并分支
    1)切换主分支
    git checkout master
    2)合并分支
    git merge login